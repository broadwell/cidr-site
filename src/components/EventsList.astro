---
import events from "../data/events.yaml";
const f = new Intl.DateTimeFormat("en-US", {
  month: "long",
  day: "numeric",
  weekday: "long",
  hour: "numeric",
  minute: "numeric",
  year: "numeric",
});
---

<section>
  {events.map(async (event, idx) => {
    return (
      <>
        <input type="checkbox" id={`event-${idx}`} />
        <label for={`event-${idx}`}>
          <header>{event.title}</header>
          <time datetime={event.datetime.toISOString()}>
            {f.format(event.datetime)}
          </time>
          <div set:html={event.description} />
        </label>
      </>
    )
  })}
</section>

<style>
  section {
    display: flex;
    flex-direction: column;
    padding: 2em 0;
    position: relative;
  }

  section::before {
    background: var(--cool-grey);
    background: linear-gradient(
      to bottom,
      transparent 0%,
      var(--cool-grey) 6%,
      var(--cool-grey) 94%,
      transparent 100%
    );
    content: "";
    display: block;
    height: 100%;
    left: 50%;
    margin-left: -3px;
    position: absolute;
    top: 0;
    width: 6px;
    z-index: 2;
  }

  header,
  time {
    display: block;
    width: fit-content;
    white-space: nowrap;
    transition: margin-right 0.2s 0.2s ease-in-out,
      margin-left 0.2s 0.2s ease-in-out;
  }

  header {
    color: var(--cardinal);
  }

  time {
    font-size: 0.9em;
    font-style: italic;
  }

  input[type="checkbox"] {
    display: none;
  }

  label {
    align-items: flex-end;
    background-color: transparent;
    border-radius: 0.25em;
    cursor: pointer;
    display: flex;
    flex-direction: column;
    margin: 0.2em 0;
    padding-right: 0.5em;
    padding: 0.5em;
    position: relative;
    transition: width 0.2s 0.2s ease-in-out,
      background-color 0.2s 0.2s ease-in-out, box-shadow 0.2s 0.2s ease-in-out;
    width: calc(50% - 0.5em);
    z-index: 3;

    &::before {
      background: white;
      border: 4px solid var(--cool-grey);
      content: "";
      display: block;
      height: 15px;
      margin-top: 0;
      position: absolute;
      right: -0.5em;
      top: 1em;
      transform: translate(50%, 0) rotate(45deg);
      transition: transform 0.2s ease-in-out, left 0.2s 0.2s ease-in-out,
        right 0.2s 0.2s ease-in-out;
      width: 15px;
      z-index: 10;
    }

    &:nth-of-type(2n) {
      align-items: flex-start;
      align-self: flex-end;
      padding-left: 0.5em;

      &::before {
        left: -0.5em;
        transform: translate(-50%, 0) rotate(45deg);
      }
    }

    &:hover {
      background-color: var(--fog-light);
    }
  }

  label > div {
    border-top: 1px solid var(--cardinal);
    font-size: 0;
    margin-top: 0.5em;
    opacity: 0;
    overflow: hidden;
    padding-top: 0.5em;
    transition: opacity 0.2s ease-in-out, font-size 0.2s 0.2s ease-in-out;
  }

  input:checked + label {
    background-color: var(--fog-light);
    box-shadow: 0 1rem 3rem rgb(0 0 0 / 18%);
    transition: width 0.2s ease-in-out, background-color 0.2s ease-in-out,
      box-shadow 0.2s ease-in-out;
    width: 100%;

    header,
    time {
      margin-right: 2rem;
      transition: margin-right 0.2s ease-in-out;
    }

    &::before {
      right: 1.5rem;
      transform: translate(50%, 0) rotate(0deg);
      transition: transform 0.2s ease-in-out, right 0.2s ease-in-out;
    }

    &:nth-of-type(2n) {
      &::before {
        left: 1.5rem;
        transform: translate(-50%, 0) rotate(0deg);
        transition: transform 0.2s ease-in-out, left 0.2s ease-in-out;
      }

      header,
      time {
        margin-left: 2rem;
        transition: margin-left 0.2s ease-in-out;
      }
    }

    & > div {
      font-size: 0.9em;
      opacity: 1;
      transition: opacity 0.2s 0.2s ease-in-out, font-size 0.2s ease-in-out;
    }
  }
</style>
